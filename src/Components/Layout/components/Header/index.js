import { useEffect, useState } from 'react';
import HeadlessTippy from '@tippyjs/react/headless';
import Tippy from '@tippyjs/react';
import 'tippy.js/dist/tippy.css'; // optional

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
    faInfo,
    faMagnifyingGlass,
    faSpinner,
    faRightToBracket,
    faEllipsisVertical,
} from '@fortawesome/free-solid-svg-icons';
import { faCircleXmark, faBell, faPenToSquare } from '@fortawesome/free-regular-svg-icons';
import classNames from 'classnames/bind';
import styles from './Header.module.scss';
import images from '../../../../asset/images';
import { Wrapper as PopperWrapper } from '../../../Popper';
import BlogItem from '../../../BlogItem';
import Button from '../../../Button';
import InfoItem from '../../../InfoItem';
import Menu from '../../../Popper/Menu';

import { LOGGED_MENU_ITEMS, UNLOGGED_MENU_ITEMS } from './Utils';
import Image from '../../../Image';

const cx = classNames.bind(styles);

function Header() {
    //test
    const [currentUser, setCurrentUser] = useState(false);

    const [searchResult, setSearchResult] = useState([]);

    useEffect(() => {
        setTimeout(() => {
            setSearchResult([]);
        }, 100);
    }, []);

    // Handle logic
    const handleSignin = () => {
        setCurrentUser(true);
        console.log(currentUser);
    };
    const handleSignOut = () => {
        setCurrentUser(false);
    };
    const handleMenuChange = (menuItem) => {
        switch (menuItem.title) {
            case 'Sign out':
                setCurrentUser(false);

                break;
        }
        console.log(currentUser);
    };

    return (
        <header className={cx('wrapper')}>
            <div className={cx('inner')}>
                <div className={cx('header-menu')}>
                    <img className={cx('logo')} src={images.logo} alt="PLog" />
                    <div className={cx('medium')}>
                        <Button size="small" type="text">
                            B√†i vi·∫øt
                        </Button>
                        <Button size="small" type="text">
                            H·ªèi ƒë√°p
                        </Button>
                        <Button size="small" type="text">
                            Th·∫£o lu·∫≠n
                        </Button>
                    </div>
                </div>
                <div className={cx('search', 'small')}>
                    <HeadlessTippy
                        interactive
                        visible={searchResult.length > 0}
                        render={(attr) => (
                            <div className={cx('search-result')}>
                                <PopperWrapper>
                                    <h3 className={cx('search-label')}>B√†i vi·∫øt</h3>
                                    <BlogItem
                                        title={'Java collections: s·∫Øp x·∫øp collections'}
                                        author={'Huynh Van Phuc'}
                                        postDate={'thg 3 5, 2017 2:58 CH'}
                                        content={
                                            'Th·ª±c ra vi·ªác s·∫Øp x·∫øp trong collection c·ªßa java l√† m·ªôt v·∫•n ƒë·ªÅ r·∫•t c≈©, nh∆∞ng th∆∞·ªùng trong c√°c c√¢u h·ªèi ph·ªèng v·∫•n v·ªÅ java ·ª©ng vi√™n r·∫•t hay b·ªã h·ªèi v·ªÅ v·∫•n ƒë·ªÅ n√†y. V√¨ v·∫≠y m√¨nh mong post n√†y s·∫Ω gi√∫p ƒë∆∞·ª£c m·ªôt s·ªë ·ª©ng vi√™n ch·∫≥ng may b·ªã h·ªèi ƒë·∫øn l√∫c ph·ªèng v·∫•n üòÑ. L·ªõp Collections cung c·∫•p c√°c ph∆∞∆°ng th·ª©c tƒ©nh(static) cho vi·ªác s·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ c·ªßa collection. Ch√∫ng ta c√≥ th·ªÉ s·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ c·ªßa:'
                                        }
                                    />
                                    <BlogItem
                                        title={'L√†m th·∫ø n√†o ƒë·ªÉ ch·∫°y shell script trong Java?'}
                                        author={'Huynh Van Phuc'}
                                        postDate={'thg 2 16, 2019 3:26 CH'}
                                        content={
                                            'Trong th·ª±c t·∫ø nhi·ªÅu khi ch∆∞∆°ng tr√¨nh Java c·ªßa b·∫°n s·∫Ω ph·∫£i g·ªçi ƒë·∫øn shell script c·ªßa h·ªá ƒëi·ªÅu h√†nh (Window, Linux) ƒë·ªÉ th·ª±c hi·ªán m·ªôt s·ªë c√°c t√°c v·ª• ƒë·∫∑c bi·ªát n√†o ƒë√≥. V√≠ d·ª• nh∆∞ khi ·ª©ng d·ª•ng c·ªßa b·∫°n th·ª±c hi·ªán m·ªôt nghi·ªáp v·ª• v√† sau ƒë√≥ ph·∫£i g·ªçi ƒë·∫øn 1 shell script ƒë·ªÉ import d·ªØ li·ªáu v√†o DB ch·∫≥ng h·∫°n.... B√†i vi·∫øt n√†y s·∫Ω gi·ªõi thi·ªáu c√°ch th·ª©c ƒë·ªÉ ch√∫ng ta c√≥ th·ªÉ ch·∫°y shell script trong Java.'
                                        }
                                    />
                                    <h3 className={cx('search-label')}>H·ªèi ƒë√°p</h3>
                                </PopperWrapper>
                            </div>
                        )}
                    >
                        <span>
                            <input placeholder="T√¨m ki·∫øm" spellCheck={false} />
                        </span>
                    </HeadlessTippy>
                    <button className={cx('clear-btn')}>
                        <FontAwesomeIcon icon={faCircleXmark} />
                    </button>
                    {/* <FontAwesomeIcon className={cx('loading')} icon={faSpinner} spin /> */}
                    <button className={cx('search-btn')}>
                        <FontAwesomeIcon icon={faMagnifyingGlass} />
                    </button>
                </div>

                <div className={cx('action')}>
                    <Button size="icon-btn" type="text" className={cx('un-small')}>
                        <FontAwesomeIcon icon={faMagnifyingGlass} />
                    </Button>
                    <HeadlessTippy
                        interactive
                        render={(attr) => (
                            <PopperWrapper>
                                <div className={cx('info-header')}>
                                    <h3>Th√¥ng tin</h3>
                                    <button className={cx('mark-seen-btn')}>ƒê√°nh d·∫•u l√† ƒë√£ ƒë·ªçc</button>
                                </div>
                                <div className={cx('list-info')}>
                                    <InfoItem
                                        title={'üîî S·ª± ki·ªán May Fest 2023 ch√≠nh th·ª©c di·ªÖn ra t·ª´ h√¥m nay! üîî'}
                                        time={'thg 4 1, 12:00 SA'}
                                    ></InfoItem>
                                    <InfoItem
                                        title={'C√¥ng b·ªë th·ªÉ l·ªá ch√≠nh th·ª©c Viblo May Fest 2023 üèÜÔ∏è‚ú®'}
                                        time={'thg 4 1, 12:00 SA'}
                                    ></InfoItem>
                                </div>
                                <div className={cx('info-footer')}>
                                    <button className={cx('all-info-btn')}>T·∫•t c·∫£ th√¥ng tin</button>
                                </div>
                            </PopperWrapper>
                        )}
                    >
                        <span>
                            <Button
                                className={cx('info-btn')}
                                type="text"
                                size="icon-btn"
                                leftIcon={<FontAwesomeIcon icon={faInfo} />}
                            ></Button>
                        </span>
                    </HeadlessTippy>
                    {currentUser && (
                        <div className={cx('action')}>
                            <Tippy content="Notification" placement="bottom">
                                <span>
                                    <Button
                                        type="text"
                                        size="icon-btn"
                                        leftIcon={<FontAwesomeIcon icon={faBell} />}
                                    ></Button>
                                </span>
                            </Tippy>
                            <Tippy content="Writes" placement="bottom">
                                <span>
                                    <Button
                                        type="text"
                                        size="icon-btn"
                                        leftIcon={<FontAwesomeIcon icon={faPenToSquare} />}
                                    ></Button>
                                </span>
                            </Tippy>
                            <Menu items={LOGGED_MENU_ITEMS} onchange={handleMenuChange}>
                                <Image
                                    className={cx('avatar')}
                                    src="https://w0.peakpx.com/wallpaper/549/987/HD-wallpaper-ssj3-goku-ball-dragon-super.jpg"
                                    alt="avatar"
                                ></Image>
                            </Menu>
                        </div>
                    )}
                    {!currentUser && (
                        <div className={cx('action')}>
                            <div>
                                <Button
                                    className={cx('large')}
                                    leftIcon={<FontAwesomeIcon icon={faRightToBracket} />}
                                    onClick={handleSignin}
                                >
                                    ƒêƒÉng nh·∫≠p/ƒêƒÉng k√Ω
                                </Button>
                                <Button
                                    className={cx('un-large')}
                                    size="icon-btn"
                                    type="text"
                                    leftIcon={<FontAwesomeIcon icon={faRightToBracket} />}
                                    onClick={handleSignin}
                                ></Button>
                            </div>
                            <Menu items={UNLOGGED_MENU_ITEMS}>
                                <span>
                                    <Button
                                        className={cx('unlogin-menu-btn')}
                                        type="text"
                                        size="icon-btn"
                                        leftIcon={<FontAwesomeIcon icon={faEllipsisVertical} />}
                                    ></Button>
                                </span>
                            </Menu>
                        </div>
                    )}
                </div>
            </div>
        </header>
    );
}

export default Header;
