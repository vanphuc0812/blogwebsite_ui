import HeadlessTippy from '@tippyjs/react/headless';
import { useEffect, useState, useRef } from 'react';

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faMagnifyingGlass, faSpinner } from '@fortawesome/free-solid-svg-icons';
import { faCircleXmark } from '@fortawesome/free-regular-svg-icons';
import classNames from 'classnames/bind';
import styles from './Search.module.scss';
import { Wrapper as PopperWrapper } from '../../../Popper';
import BlogItem from '../../../BlogItem';
import Button from '../../../Button';

const cx = classNames.bind(styles);
function Search() {
    const [searchResult, setSearchResult] = useState([]);
    const [searchInputValue, setSearchInputValue] = useState('');
    const [showResult, setShowResult] = useState(true);

    const inputRef = useRef();

    useEffect(() => {
        fetch('https://tiktok.fullstack.edu.vn/api/users/search?q=hoaa&type=less')
            .then((res) => res.json())
            .then((res) => setSearchResult(res.data));
    }, []);

    const handleClear = () => {
        setSearchInputValue('');
        setSearchResult([]);
        inputRef.current.focus();
    };

    const handleHideResult = () => {
        setShowResult(false);
    };

    return (
        <div className={cx('search', 'small')}>
            <HeadlessTippy
                interactive
                onClickOutside={handleHideResult}
                visible={showResult && searchResult.length > 0}
                render={(attr) => (
                    <div className={cx('search-result')}>
                        <PopperWrapper>
                            <h3 className={cx('search-label')}>B√†i vi·∫øt</h3>
                            <BlogItem
                                title={'Java collections: s·∫Øp x·∫øp collections'}
                                author={'Huynh Van Phuc'}
                                postDate={'thg 3 5, 2017 2:58 CH'}
                                content={
                                    'Th·ª±c ra vi·ªác s·∫Øp x·∫øp trong collection c·ªßa java l√† m·ªôt v·∫•n ƒë·ªÅ r·∫•t c≈©, nh∆∞ng th∆∞·ªùng trong c√°c c√¢u h·ªèi ph·ªèng v·∫•n v·ªÅ java ·ª©ng vi√™n r·∫•t hay b·ªã h·ªèi v·ªÅ v·∫•n ƒë·ªÅ n√†y. V√¨ v·∫≠y m√¨nh mong post n√†y s·∫Ω gi√∫p ƒë∆∞·ª£c m·ªôt s·ªë ·ª©ng vi√™n ch·∫≥ng may b·ªã h·ªèi ƒë·∫øn l√∫c ph·ªèng v·∫•n üòÑ. L·ªõp Collections cung c·∫•p c√°c ph∆∞∆°ng th·ª©c tƒ©nh(static) cho vi·ªác s·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ c·ªßa collection. Ch√∫ng ta c√≥ th·ªÉ s·∫Øp x·∫øp c√°c ph·∫ßn t·ª≠ c·ªßa:'
                                }
                            />
                            <BlogItem
                                title={'L√†m th·∫ø n√†o ƒë·ªÉ ch·∫°y shell script trong Java?'}
                                author={'Huynh Van Phuc'}
                                postDate={'thg 2 16, 2019 3:26 CH'}
                                content={
                                    'Trong th·ª±c t·∫ø nhi·ªÅu khi ch∆∞∆°ng tr√¨nh Java c·ªßa b·∫°n s·∫Ω ph·∫£i g·ªçi ƒë·∫øn shell script c·ªßa h·ªá ƒëi·ªÅu h√†nh (Window, Linux) ƒë·ªÉ th·ª±c hi·ªán m·ªôt s·ªë c√°c t√°c v·ª• ƒë·∫∑c bi·ªát n√†o ƒë√≥. V√≠ d·ª• nh∆∞ khi ·ª©ng d·ª•ng c·ªßa b·∫°n th·ª±c hi·ªán m·ªôt nghi·ªáp v·ª• v√† sau ƒë√≥ ph·∫£i g·ªçi ƒë·∫øn 1 shell script ƒë·ªÉ import d·ªØ li·ªáu v√†o DB ch·∫≥ng h·∫°n.... B√†i vi·∫øt n√†y s·∫Ω gi·ªõi thi·ªáu c√°ch th·ª©c ƒë·ªÉ ch√∫ng ta c√≥ th·ªÉ ch·∫°y shell script trong Java.'
                                }
                            />
                            <h3 className={cx('search-label')}>H·ªèi ƒë√°p</h3>
                        </PopperWrapper>
                    </div>
                )}
            >
                <span>
                    <input
                        ref={inputRef}
                        value={searchInputValue}
                        placeholder="T√¨m ki·∫øm"
                        spellCheck={false}
                        onChange={(e) => {
                            setSearchInputValue(e.target.value);
                        }}
                        onFocus={() => setShowResult(true)}
                    />
                </span>
            </HeadlessTippy>

            {!!searchInputValue && (
                <Button
                    type="text"
                    size="icon-btn"
                    leftIcon={<FontAwesomeIcon icon={faCircleXmark} />}
                    className={cx('clear-btn')}
                    onClick={handleClear}
                ></Button>
            )}

            {/* <FontAwesomeIcon className={cx('loading')} icon={faSpinner} spin /> */}
            <button className={cx('search-btn')}>
                <FontAwesomeIcon icon={faMagnifyingGlass} />
            </button>
        </div>
    );
}

export default Search;
